@page "/"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IListingService listingService
@inject FilteredListings FilteredListingsService

<MudImage Src="images/BackgroundImage.jpg" ObjectFit=ObjectFit.Cover Style="height: 500px; width: 100%; position: absolute; top: 0; left: 0;" Alt="HomepageImage" />
<MudForm Model="@model">
    <MudGrid Spacing="4" Style="margin-top: 47vh;">
        <MudItem xs="12" md="3">
            <MudTextField Variant="Variant.Text" Label="Περιοχή" Placeholder="Περιοχή" @bind-Value="model.Area" />
        </MudItem>

        <MudItem xs="12" md="3">
            <MudInputLabel>Τιμή</MudInputLabel>
            <MudButton Variant="Variant.Text" Color="Color.Transparent" OnClick="TogglePriceDropdown">
                Από - Έως
            </MudButton>

            <MudCollapse Expanded="showPriceDropdown">
                <MudSelect T="double?" @bind-Value="model.LowPrice" Label="Ελάχιστη Τιμή">
                    <MudSelectItem T="double?" Value="@(null)">Αδιάφορο</MudSelectItem>
                    <MudSelectItem T="double?" Value="10000">10.000</MudSelectItem>
                    <MudSelectItem T="double?" Value="20000">20.000</MudSelectItem>
                    <MudSelectItem T="double?" Value="30000">30.000</MudSelectItem>
                    <MudSelectItem T="double?" Value="40000">40.000</MudSelectItem>
                </MudSelect>

                <MudSelect T="double?" @bind-Value="model.HighPrice" Label="Μέγιστη Τιμή">
                    <MudSelectItem T="double?" Value="@(null)">Αδιάφορο</MudSelectItem>
                    <MudSelectItem T="double?" Value="10000">10.000</MudSelectItem>
                    <MudSelectItem T="double?" Value="20000">20.000</MudSelectItem>
                    <MudSelectItem T="double?" Value="30000">30.000</MudSelectItem>
                    <MudSelectItem T="double?" Value="40000">40.000</MudSelectItem>
                </MudSelect>
            </MudCollapse>
        </MudItem>

        <MudItem xs="12" md="3">
            <MudInputLabel>Εμβαδόν (τ.μ.)</MudInputLabel>
            <MudButton Variant="Variant.Text" Color="Color.Transparent" OnClick="ToggleFloorAreaDropdown">
                Από - Έως
            </MudButton>
            <MudCollapse Expanded="showFloorAreaDropdown">
                <MudSelect T="int?" @bind-Value="model.FloorAreaLow" Label="Ελάχιστη Τιμή">
                    <MudSelectItem T="int?" Value="@(null)">Αδιάφορο</MudSelectItem>
                    <MudSelectItem T="int?" Value=" 30">30</MudSelectItem>
                    <MudSelectItem T="int?" Value=" 50">50</MudSelectItem>
                    <MudSelectItem T="int?" Value="70">70</MudSelectItem>
                    <MudSelectItem T="int?" Value="100">100</MudSelectItem>
                </MudSelect>

                <MudSelect T="int?" @bind-Value="model.FloorAreaHigh" Label="Μέγιστη Τιμή">
                    <MudSelectItem T="int?" Value="@(null)">Αδιάφορο</MudSelectItem>
                    <MudSelectItem T="int?" Value="30">30</MudSelectItem>
                    <MudSelectItem T="int?" Value="50">50</MudSelectItem>
                    <MudSelectItem T="int?" Value="70">70</MudSelectItem>
                    <MudSelectItem T="int?" Value="100">100</MudSelectItem>
                </MudSelect>
            </MudCollapse>
        </MudItem>

        <MudItem xs="12" md="3">
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="HandleValidSubmit">
                Αναζήτηση
            </MudButton>
        </MudItem>
    </MudGrid>
</MudForm>

@code {
    private FilterDto model = new FilterDto();

    private bool showPriceDropdown = false;
    private bool showFloorAreaDropdown = false;

    private void TogglePriceDropdown()
    {
        showPriceDropdown = !showPriceDropdown;
    }

    private void ToggleFloorAreaDropdown()
    {
        showFloorAreaDropdown = !showFloorAreaDropdown;
    }

    private async Task HandleValidSubmit()
    {
        var response =await Http.PostAsJsonAsync<FilterDto>("https://localhost:7002/api/listing/GetFilteredListings", model);
        ResponseDto responseDto = await response.Content.ReadFromJsonAsync<ResponseDto>();

        if (responseDto != null && responseDto.IsSuccess)
        {
            List<ListingDto> Listings = JsonConvert.DeserializeObject<List<ListingDto>>(Convert.ToString(responseDto.Result));

            // Store data in the shared service
            FilteredListingsService.SetListingsData(Listings);

            // Navigate to FilteredListings
            Navigation.NavigateTo("filtered-listings");
        }
    }
}
