@page "/filtered-listings"
@using Homesick.Web.Models
@using Homesick.Web.Service.RetrievingServices
@using Newtonsoft.Json
@inject FilteredListingsService FilteredListingsService
@inject NavigationManager Navigation
@using MudBlazor

<MudCard>
    <MudCardContent>
        <MudText Typo="Typo.h5">Filtered Listings</MudText>
        
        <MudTable T="ListingDto" Dense="true" Hover="true" Bordered="true">
            <HeaderContent>
                <MudTableRow>
                    <MudTableCell>ID</MudTableCell>
                    <MudTableCell>Name</MudTableCell>
                    <MudTableCell>Category</MudTableCell>
                    <MudTableCell>Price</MudTableCell>
                </MudTableRow>
            </HeaderContent>

            <RowTemplate>
                @if (listingData != null)
                {
                    @foreach (ListingDto item in (IEnumerable<ListingDto>)listingData)
                    {
                        <MudTableRow>
                            <MudTableCell>@item.ListingType</MudTableCell>
                            <MudTableCell>@item.House.Name</MudTableCell>
                            <MudTableCell>@item.House.Description</MudTableCell>
                            <MudTableCell>@item.House.Price.ToString("C")</MudTableCell>
                        </MudTableRow>
                    }
                }
                else
                {
                    <MudTableRow>
                        <MudTableCell ColSpan="4" Class="text-center">
                            No data available.
                        </MudTableCell>
                    </MudTableRow>
                }
            </RowTemplate>
        </MudTable>
    </MudCardContent>
</MudCard>

@code {
    private IEnumerable<ListingDto>? listingData;

    protected override void OnInitialized()
    {
        var uri = new Uri(Navigation.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
        var jsonData = query.Get("data");

        if (!string.IsNullOrEmpty(jsonData))
        {
            listingData = JsonConvert.DeserializeObject<IEnumerable<ListingDto>>(jsonData);
        }
    }
}